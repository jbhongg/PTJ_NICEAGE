{"remainingRequest":"C:\\worksapce\\S05P13B202\\backend\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\worksapce\\S05P13B202\\backend\\frontend\\src\\views\\user\\signup\\signup.vue?vue&type=style&index=0&id=578671f0&scoped=true&lang=css","dependencies":[{"path":"C:\\worksapce\\S05P13B202\\backend\\frontend\\src\\views\\user\\signup\\signup.vue","mtime":1629269209836},{"path":"C:\\worksapce\\S05P13B202\\backend\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\worksapce\\S05P13B202\\backend\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1628298225000},{"path":"C:\\worksapce\\S05P13B202\\backend\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\worksapce\\S05P13B202\\backend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\worksapce\\S05P13B202\\backend\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIC5lbC1mb3JtLWl0ZW1fX2xhYmVsIHsNCiAgICBmb250LXNpemU6IDIwcHg7DQogIH0NCiAgLnNpZ251cC1jb250YWluZXIgew0KICAgIG1hcmdpbi10b3A6IDIwcHg7DQogICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7DQogICAgYm9yZGVyLXJhZGl1czogNDBweCAhaW1wb3J0YW50Ow0KICB9DQogIC5tYWluLWNvbnRlbnQgew0KICAgIGhlaWdodDogMTAwJTsNCiAgfQ0KICAucmlnaHQtY29udGVudCB7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIGJhY2tncm91bmQ6IHJnYmEoMTczLCAyMDMsIDE3NiwgMC43KTsNCiAgICAvKiBoZWlnaHQ6IDEwMCU7ICovDQogICAgLyogb3BhY2l0eTogMC41OyAqLw0KICB9DQogIC5zZWxlY3QtYnRuIHsNCiAgICB3aWR0aDogMjAwcHg7DQogICAgaGVpZ2h0OiAyMDBweDsNCiAgICBiYWNrZ3JvdW5kOiAjRUJDODZGICFpbXBvcnRhbnQ7DQogICAgYm9yZGVyLXJhZGl1czogNDBweCAhaW1wb3J0YW50Ow0KICB9DQogIC5zZWxlY3QtZm9udCB7DQogICAgZm9udC1mYW1pbHk6IEJsYWNrSGFuU2FuczsNCiAgICBmb250LXNpemU6IDM2cHg7DQogIH0NCiAgLmluZm8tZm9udCB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGZvbnQtZmFtaWx5OiBTYW5nU2FuZ0Zsb3dlclJvYWQ7DQogICAgZm9udC1zaXplOiAzNnB4Ow0KICAgIGNvbG9yOiByZ2JhKDI0OCwgMTQxLCAxNDEsIDEpOyAgDQogIH0NCiAgLnF1ZXN0aW9uIHsNCiAgICBmb250LWZhbWlseTogU2FuZ1NhbmdGbG93ZXJSb2FkOw0KICAgIGZvbnQtc2l6ZTogODhweDsNCiAgICBjb2xvcjogcmdiYSgyNDgsIDE0MSwgMTQxLCAxKTsNCiAgfQ0KICAuZXhwbGFuYXRpb24gew0KICAgIGZvbnQtZmFtaWx5OiBTYW5nU2FuZ0Zsb3dlclJvYWQ7DQogICAgZm9udC1zaXplOiA0OHB4Ow0KICAgIHRleHQtc2hhZG93OiAwcHggNHB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjUpOw0KICB9DQogIC5tYWluLWltYWdlIHsNCiAgICBoZWlnaHQ6IDQ0MnB4Ow0KICAgIHdpZHRoOiA3MDBweDsNCiAgICBtYXJnaW46IDAgYXV0bzsNCiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47DQogICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvbWFpbi5wbmcnKTsNCiAgfQ0KICAuYmFjay1idG4gew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBib3R0b206IDEwcHg7DQogICAgbGVmdDogMTBweDsNCiAgfQ0K"},{"version":3,"sources":["C:\\worksapce\\S05P13B202\\backend\\frontend\\src\\views\\user\\signup\\signup.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/B;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/B;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ","file":"C:/worksapce/S05P13B202/backend/frontend/src/views/user/signup/signup.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-row class=\"main-content\">\r\n    <el-col class=\"left-content\" :span=\"12\">\r\n      <el-row justify=\"center\" align=\"middle\">\r\n        <el-col :span=\"24\">\r\n          <el-row justify=\"center\"><div class=\"main-image\"></div></el-row>\r\n          <div class=\"explanation\">회원가입에 필요한 정보를 입력하시면 서비스를 이용하실 수 있어요.</div>\r\n          <el-button type=\"text\" @click=\"clickTTS\">\r\n            <span class=\"iconify\" data-inline=\"false\" data-icon=\"el:speaker\" style=\"font-size: 100px;\"></span>\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-col>\r\n    <BackButton/>\r\n    <el-col class=\"right-content\" :span=\"12\">\r\n      <el-row justify=\"center\" align=\"middle\">\r\n        <el-col :span=\"20\">\r\n          <el-container class=\"signup-container\">\r\n            <el-header>\r\n              <div class=\"info-font\">회원가입</div>\r\n            </el-header>\r\n            <el-main>\r\n              <el-form :model=\"state.signupForm\" :rules=\"state.rules\" ref=\"signupForm\" label-position=\"top\">\r\n                <el-form-item prop=\"userId\" label=\"아이디를 만들어주세요.\" :label-width=\"state.formLabelWidth\" >\r\n                  <el-row>\r\n                    <el-col :span=\"18\">\r\n                      <el-input v-model=\"state.signupForm.userId\" autocomplete=\"off\"></el-input>\r\n                    </el-col>\r\n                    <el-col :span=\"6\">\r\n                      <el-button type=\"info\" @click=\"clickOverlap\">중복확인</el-button>\r\n                    </el-col>\r\n                  </el-row>\r\n                </el-form-item>\r\n                <el-form-item prop=\"userPassword\" label=\"비밀번호를 만들어주세요.\" :label-width=\"state.formLabelWidth\">\r\n                  <el-input v-model=\"state.signupForm.userPassword\" autocomplete=\"off\" show-password @keyup=\"checkValidation\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"userPasswordConfirmation\" label=\"위의 비밀번호를 다시 입력해주세요.\" :label-width=\"state.formLabelWidth\">\r\n                  <el-input v-model=\"state.signupForm.userPasswordConfirmation\" autocomplete=\"off\" show-password @keyup=\"checkValidation\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"userName\" label=\"성함을 입력해주세요.\" :label-width=\"state.formLabelWidth\" >\r\n                  <el-input v-model=\"state.signupForm.userName\" autocomplete=\"off\" @keyup=\"checkValidation\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"userGender\" label=\"성별을 선택해주세요.\">\r\n                  <el-row justify=\"start\">\r\n                    <el-radio-group v-model=\"state.signupForm.userGender\">\r\n                      <el-radio label=\"M\">남자</el-radio>\r\n                      <el-radio label=\"F\">여자</el-radio>\r\n                    </el-radio-group>\r\n                  </el-row>\r\n                </el-form-item>\r\n                <el-row justify=\"start\">생년월일을 입력해주세요.</el-row>\r\n                <br>\r\n                <el-row>\r\n                  <el-col :span=\"4\">\r\n                    <el-form-item prop=\"userBirthYear\">\r\n                      <el-input v-model=\"state.signupForm.userBirthYear\" placeholder=\"\"></el-input>\r\n                    </el-form-item>\r\n                  </el-col>\r\n                  <el-col :span=\"1\">년</el-col>\r\n                  <el-col :span=\"3\" :offset=\"1\">\r\n                    <el-form-item prop=\"userBirthMonth\">\r\n                      <el-input v-model=\"state.signupForm.userBirthMonth\" placeholder=\"\"></el-input>\r\n                    </el-form-item>\r\n                  </el-col>\r\n                  <el-col :span=\"1\">월</el-col>\r\n                  <el-col :span=\"3\" :offset=\"1\">\r\n                    <el-form-item prop=\"userBirthDay\">\r\n                      <el-input v-model=\"state.signupForm.userBirthDay\" placeholder=\"\"></el-input>\r\n                    </el-form-item>\r\n                  </el-col>\r\n                  <el-col :span=\"1\">일</el-col>\r\n                </el-row>\r\n                <el-form-item prop=\"userAddress\" label=\"주소를 입력해주세요.\" :label-width=\"state.formLabelWidth\">\r\n                  <el-row justify=\"start\">\r\n                    <el-button @click=\"execDaumPostcode\">주소 찾기</el-button>\r\n                  </el-row>\r\n                  <el-input v-model=\"state.signupForm.userAddress\" placeholder=\"주소\"></el-input>\r\n                  <el-input id=\"detailAddress\" v-model=\"state.signupForm.userDetailAddress\" placeholder=\"상세주소\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item prop=\"userPhone\" label=\"휴대폰 번호를 입력해주세요.\" :label-width=\"state.formLabelWidth\">\r\n                  <el-row>\r\n                    <el-col :span=\"12\">\r\n                      <el-input v-model=\"state.signupForm.userPhone\" placeholder=\"휴대폰 번호를 입력해주세요.\"></el-input>\r\n                    </el-col>\r\n                    <el-col :span=\"6\">\r\n                      <el-button type=\"info\" @click=\"sendAuthenticationNumber\">인증번호발송</el-button>\r\n                    </el-col>\r\n                  </el-row>\r\n                  <el-row style=\"margin-top: 2px;\">\r\n                    <el-col :span=\"8\">\r\n                      <el-input v-model=\"state.signupForm.authenticationNumber\" placeholder=\"인증번호 입력\"></el-input>\r\n                    </el-col>\r\n                    <el-col :span=\"5\">\r\n                      <el-button type=\"info\" @click=\"confirmAuthenticationNumber\">인증번호확인</el-button>\r\n                    </el-col>\r\n                    <el-col :span=\"5\" v-if=\"state.isAuthNumConfirmed\">\r\n                      인증완료\r\n                    </el-col>\r\n                  </el-row>\r\n                </el-form-item>\r\n                <el-form-item prop=\"userEmergency\" label=\"비상연락망(가족, 보호자)을 입력해주세요.\" :label-width=\"state.formLabelWidth\">\r\n                  <el-input v-model=\"state.signupForm.userEmergency\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-main>\r\n            <div class=\"info-font\">다 입력 하셨나요?</div>\r\n            <el-row justify=\"center\">\r\n              <el-button class=\"select-btn\" @click=\"clickSignup\" :disabled=\"state.isDisabled\">\r\n                <span class=\"iconify\" data-inline=\"false\" data-icon=\"noto:man-gesturing-ok\" style=\"font-size: 100px;\"></span>\r\n                <div class=\"select-font\">다 입력했어~</div>\r\n              </el-button>\r\n            </el-row>\r\n          </el-container>\r\n        </el-col>\r\n      </el-row>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\n// import { useRouter } from 'vue-router'\r\nimport { reactive, computed, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport BackButton from '@/views/components/BackButton'\r\nexport default {\r\n  name: 'Signup',\r\n  components: {\r\n    BackButton\r\n  },\r\n  // setup() {\r\n  //   const router = useRouter()\r\n\r\n  // }\r\n  setup(props) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    // 마운드 이후 바인딩 될 예정 - 컨텍스트에 노출시켜야함. <return>\r\n    const signupForm = ref(null)\r\n    /*\r\n      // Element UI Validator\r\n      // rules의 객체 키 값과 form의 객체 키 값이 같아야 매칭되어 적용됨\r\n      //\r\n    */\r\n    const state = reactive({\r\n      signupForm: {\r\n        userId: '',\r\n        userPassword: '',\r\n        userPasswordConfirmation: '',\r\n        userName: '',\r\n        userGender: '',\r\n        userBirth: '',\r\n        userBirthYear: '',\r\n        userBirthMonth: '',\r\n        userBirthDay: '',\r\n        userAddress: '',\r\n        userDetailAddress: '',\r\n        userPhone: '',\r\n        userEmergency: \"\",\r\n        authenticationNumber: \"\",\r\n      },\r\n      rules: {\r\n        userId: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n          { min: 4, message: '최소 4글자를 입력해야 합니다.', trigger: 'blur' },\r\n          { max: 15, message: '최대 15자까지 입력 가능합니다.', trigger: 'blur' }\r\n        ],\r\n        userPassword: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n          { min: 8, message: '최소 8글자를 입력해야 합니다.', trigger: 'blur' },\r\n          { max: 16, message: '최대 16글자까지 입력 가능합니다.', trigger: 'blur' },\r\n        ],\r\n        userPasswordConfirmation: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n          { min: 8, message: '최소 8글자를 입력해야 합니다.', trigger: 'blur' },\r\n          { max: 16, message: '최대 16글자까지 입력 가능합니다.', trigger: 'blur' },\r\n        ],\r\n        userName: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n          { max: 30, message: '최대 30자까지 입력 가능합니다.', trigger: 'blur' }\r\n        ],\r\n        // userGender: [\r\n        //   { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        // ],\r\n        userBirthYear: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        ],\r\n        userBirthMonth: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        ],\r\n        userBirthDay: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        ],\r\n        userAddress: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        ],\r\n        userPhone: [\r\n          { required: true, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        ],\r\n        // emergency: [\r\n        //   { required: false, message: '필수 입력 항목입니다.', trigger: 'blur' },\r\n        // ],\r\n      },\r\n      dialogVisible: computed(() => props.open),\r\n      formLabelWidth: '200px',\r\n      isDisabled: true,\r\n      isAuthNumConfirmed: false,\r\n    })\r\n\r\n    const clickSignup = function () {\r\n      // 로그인 클릭 시 validate 체크 후 그 결과 값에 따라, 로그인 API 호출 또는 경고창 표시\r\n      signupForm.value.validate((valid) => {\r\n        if (valid) {\r\n          store.commit('root/loadingOn')\r\n          state.signupForm.userAddress = state.signupForm.userAddress + ' ' + state.signupForm.userDetailAddress\r\n          state.signupForm.userBirth = state.signupForm.userBirthYear + '-' + state.signupForm.userBirthMonth + '-' + state.signupForm.userBirthDay\r\n          console.log(state.signupForm)\r\n          store.dispatch('root/requestSignup', state.signupForm)\r\n          .then(function () {\r\n            store.commit('root/loadingOff')\r\n          })\r\n          .then(() => {\r\n            initSignupForm()\r\n            router.push({\r\n              name: 'Login'\r\n            })\r\n          })\r\n          .catch(function (err) {\r\n            store.commit('root/loadingOff')\r\n            alert(\"회원 가입에 실패하였습니다.\", err)\r\n          })\r\n        } else {\r\n          alert('Validate error!')\r\n        }\r\n      });\r\n    }\r\n\r\n    const clickOverlap = function() {\r\n      const userId = state.signupForm.userId\r\n      store.commit('root/loadingOn')\r\n      store.dispatch('root/requestOverlapped', {userId: userId})\r\n      .then((res) => {\r\n        console.log(res)\r\n        store.commit('root/loadingOff')\r\n        if (res.data.data) {\r\n          alert(\"이미 존재하는 아이디입니다.\")\r\n        } else {\r\n          alert(\"사용가능한 아이디입니다.\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.commit('root/loadingOff')\r\n        alert(err)\r\n      })\r\n    }\r\n\r\n    const initSignupForm = function () {\r\n      state.signupForm.userId = ''\r\n      state.signupForm.userPassword = ''\r\n      state.signupForm.userPasswordConfirmation = ''\r\n      state.signupForm.userName = ''\r\n      state.signupForm.userGender = ''\r\n      state.signupForm.userBirth = ''\r\n      state.signupForm.userBirthYear = ''\r\n      state.signupForm.userBirthMonth = ''\r\n      state.signupForm.userBirthDay = ''\r\n      state.signupForm.userAddress = ''\r\n      state.signupForm.userDetailAddress = ''\r\n      state.signupForm.userPhone = ''\r\n      state.signupForm.userEmergency = ''\r\n    }\r\n\r\n    const checkValidation = function () {\r\n      signupForm.value.validate((valid) => {\r\n        if (valid) {\r\n          state.isDisabled = false\r\n        } else {\r\n          state.isDisabled = true\r\n        }\r\n      })\r\n    }\r\n\r\n    const execDaumPostcode = function() {\r\n      new window.daum.Postcode({\r\n        oncomplete: function(data) {\r\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n\r\n          var addr = ''; // 주소 변수\r\n          // var extraAddr = ''; // 참고항목 변수\r\n\r\n          //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n          if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n              addr = data.roadAddress;\r\n          } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n              addr = data.jibunAddress;\r\n          }\r\n\r\n          state.signupForm.userAddress = addr;\r\n          // 커서를 상세주소 필드로 이동한다.\r\n          document.getElementById(\"detailAddress\").focus();\r\n        }\r\n      }).open();\r\n    }\r\n\r\n\r\n    // 휴대폰에 인증번호 요청\r\n    const sendAuthenticationNumber = function() {\r\n      const payload = {\r\n        authValid: true,\r\n        phoneNumber: state.signupForm.userPhone\r\n      }\r\n      store.commit('root/loadingOn')\r\n      store.dispatch('root/requestAuthenticationNumber', payload)\r\n      .then(res => {\r\n        console.log(res)\r\n        store.commit('root/loadingOff')\r\n        alert('인증번호가 발송되었습니다.')\r\n      }) \r\n      .catch(() => {\r\n        store.commit('root/loadingOff')\r\n        alert('인증번호 오류가 발생했습니다.')\r\n      })\r\n    }\r\n\r\n    const confirmAuthenticationNumber = function() {\r\n      const param = {\r\n        phoneNumber: state.signupForm.userPhone,\r\n        authNum: state.signupForm.authenticationNumber\r\n      }\r\n      store.commit('root/loadingOn')\r\n      store.dispatch('root/requestConfirmAuthNum', param)\r\n      .then(res => {\r\n        console.log(res.data.data)\r\n        store.commit('root/loadingOff')\r\n        if (res.data.data == \"true\") {\r\n          state.isAuthNumConfirmed = true\r\n          checkValidation()\r\n          alert('인증되셨습니다.')\r\n        } else {\r\n          alert('인증에 실패했습니다. 다시 인증해주세요.')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        store.commit('root/loadingOff')\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n    const clickTTS = () => {\r\n      const text = document.querySelector('.explanation').innerText\r\n      let source; \r\n      let context; \r\n      context = new AudioContext();\r\n      store.dispatch('requestKakaoTTS', text)\r\n      .then(res => {\r\n        context.decodeAudioData(res.data, function(buffer) {\r\n            source = context.createBufferSource();\r\n            source.buffer = buffer;\r\n            source.connect(context.destination);\r\n            source.start(); \r\n          });  \r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n    return { signupForm, state, clickSignup, clickOverlap, checkValidation, sendAuthenticationNumber, execDaumPostcode, confirmAuthenticationNumber, clickTTS }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  .el-form-item__label {\r\n    font-size: 20px;\r\n  }\r\n  .signup-container {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    border-radius: 40px !important;\r\n  }\r\n  .main-content {\r\n    height: 100%;\r\n  }\r\n  .right-content {\r\n    position: relative;\r\n    background: rgba(173, 203, 176, 0.7);\r\n    /* height: 100%; */\r\n    /* opacity: 0.5; */\r\n  }\r\n  .select-btn {\r\n    width: 200px;\r\n    height: 200px;\r\n    background: #EBC86F !important;\r\n    border-radius: 40px !important;\r\n  }\r\n  .select-font {\r\n    font-family: BlackHanSans;\r\n    font-size: 36px;\r\n  }\r\n  .info-font {\r\n    text-align: center;\r\n    font-family: SangSangFlowerRoad;\r\n    font-size: 36px;\r\n    color: rgba(248, 141, 141, 1);  \r\n  }\r\n  .question {\r\n    font-family: SangSangFlowerRoad;\r\n    font-size: 88px;\r\n    color: rgba(248, 141, 141, 1);\r\n  }\r\n  .explanation {\r\n    font-family: SangSangFlowerRoad;\r\n    font-size: 48px;\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  }\r\n  .main-image {\r\n    height: 442px;\r\n    width: 700px;\r\n    margin: 0 auto;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-image: url('../../../assets/images/main.png');\r\n  }\r\n  .back-btn {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 10px;\r\n  }\r\n</style>"]}]}